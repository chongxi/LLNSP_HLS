// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.1
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "rt_feedback.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic rt_feedback::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic rt_feedback::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> rt_feedback::ap_ST_st1_fsm_0 = "1";
const sc_lv<5> rt_feedback::ap_ST_pp0_stg0_fsm_1 = "10";
const sc_lv<5> rt_feedback::ap_ST_pp0_stg1_fsm_2 = "100";
const sc_lv<5> rt_feedback::ap_ST_st5_fsm_3 = "1000";
const sc_lv<5> rt_feedback::ap_ST_st6_fsm_4 = "10000";
const sc_lv<32> rt_feedback::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> rt_feedback::ap_const_lv1_1 = "1";
const sc_lv<32> rt_feedback::ap_const_lv32_2 = "10";
const sc_lv<1> rt_feedback::ap_const_lv1_0 = "0";
const sc_lv<32> rt_feedback::ap_const_lv32_1 = "1";
const sc_lv<32> rt_feedback::ap_const_lv32_4 = "100";
const sc_lv<32> rt_feedback::ap_const_lv32_3 = "11";
const sc_lv<3> rt_feedback::ap_const_lv3_0 = "000";
const sc_lv<18> rt_feedback::ap_const_lv18_0 = "000000000000000000";
const sc_lv<32> rt_feedback::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> rt_feedback::ap_const_lv32_378 = "1101111000";
const sc_lv<3> rt_feedback::ap_const_lv3_7 = "111";
const sc_lv<3> rt_feedback::ap_const_lv3_1 = "1";
const sc_lv<3> rt_feedback::ap_const_lv3_6 = "110";
const sc_lv<18> rt_feedback::ap_const_lv18_3D090 = "111101000010010000";
const sc_lv<18> rt_feedback::ap_const_lv18_1 = "1";

rt_feedback::rt_feedback(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_4 );
    sensitive << ( tmp_reg_179 );
    sensitive << ( exitcond_fu_143_p2 );
    sensitive << ( ap_sig_ioackin_spk_id_out_V_V_TREADY );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_4 );
    sensitive << ( tmp_reg_179 );
    sensitive << ( exitcond_fu_143_p2 );
    sensitive << ( ap_sig_ioackin_spk_id_out_V_V_TREADY );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sig_108);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_124);
    sensitive << ( fet_packet_spk_id_V_empty_n );
    sensitive << ( exitcond1_reg_162 );
    sensitive << ( tmp_1_reg_171 );

    SC_METHOD(thread_ap_sig_22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_60);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_76);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_85);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_4 );
    sensitive << ( tmp_reg_179 );
    sensitive << ( exitcond_fu_143_p2 );

    SC_METHOD(thread_ap_sig_90);
    sensitive << ( fet_packet_spk_id_V_empty_n );
    sensitive << ( tmp_2_reg_175 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg0_fsm_1);
    sensitive << ( ap_sig_60 );

    SC_METHOD(thread_ap_sig_cseq_ST_pp0_stg1_fsm_2);
    sensitive << ( ap_sig_42 );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_22 );

    SC_METHOD(thread_ap_sig_cseq_ST_st5_fsm_3);
    sensitive << ( ap_sig_108 );

    SC_METHOD(thread_ap_sig_cseq_ST_st6_fsm_4);
    sensitive << ( ap_sig_76 );

    SC_METHOD(thread_ap_sig_ioackin_spk_id_out_V_V_TREADY);
    sensitive << ( spk_id_out_V_V_TREADY );
    sensitive << ( ap_reg_ioackin_spk_id_out_V_V_TREADY );

    SC_METHOD(thread_exitcond1_fu_105_p2);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( ap_sig_90 );
    sensitive << ( i_phi_fu_82_p4 );

    SC_METHOD(thread_exitcond_fu_143_p2);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_4 );
    sensitive << ( tmp_reg_179 );
    sensitive << ( exitcond_fu_143_p2 );
    sensitive << ( ap_sig_ioackin_spk_id_out_V_V_TREADY );
    sensitive << ( j_reg_89 );

    SC_METHOD(thread_fet_packet_spk_id_V_blk_n);
    sensitive << ( fet_packet_spk_id_V_empty_n );
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_162 );
    sensitive << ( tmp_1_reg_171 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_2_reg_175 );

    SC_METHOD(thread_fet_packet_spk_id_V_read);
    sensitive << ( ap_sig_cseq_ST_pp0_stg1_fsm_2 );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( exitcond1_reg_162 );
    sensitive << ( tmp_1_reg_171 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_2_reg_175 );
    sensitive << ( ap_sig_90 );
    sensitive << ( ap_sig_124 );

    SC_METHOD(thread_i_1_fu_111_p2);
    sensitive << ( i_phi_fu_82_p4 );

    SC_METHOD(thread_i_phi_fu_82_p4);
    sensitive << ( exitcond1_reg_162 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( i_reg_78 );
    sensitive << ( i_1_reg_166 );

    SC_METHOD(thread_j_1_fu_149_p2);
    sensitive << ( j_reg_89 );

    SC_METHOD(thread_spk_id_out_V_V_TDATA);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_4 );
    sensitive << ( tmp_reg_179 );
    sensitive << ( exitcond_fu_143_p2 );

    SC_METHOD(thread_spk_id_out_V_V_TDATA_blk_n);
    sensitive << ( spk_id_out_V_V_TREADY );
    sensitive << ( ap_sig_cseq_ST_st6_fsm_4 );
    sensitive << ( tmp_reg_179 );
    sensitive << ( exitcond_fu_143_p2 );

    SC_METHOD(thread_spk_id_out_V_V_TVALID);
    sensitive << ( ap_sig_cseq_ST_st6_fsm_4 );
    sensitive << ( tmp_reg_179 );
    sensitive << ( exitcond_fu_143_p2 );
    sensitive << ( ap_reg_ioackin_spk_id_out_V_V_TREADY );

    SC_METHOD(thread_tmp_1_fu_117_p2);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond1_fu_105_p2 );
    sensitive << ( ap_sig_90 );
    sensitive << ( i_phi_fu_82_p4 );

    SC_METHOD(thread_tmp_2_fu_123_p2);
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_sig_cseq_ST_pp0_stg0_fsm_1 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( exitcond1_fu_105_p2 );
    sensitive << ( ap_sig_90 );
    sensitive << ( i_phi_fu_82_p4 );

    SC_METHOD(thread_tmp_fu_137_p2);
    sensitive << ( ap_sig_cseq_ST_st5_fsm_3 );
    sensitive << ( val_assign_fu_60 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_reg_ppiten_pp0_it0 );
    sensitive << ( ap_reg_ppiten_pp0_it1 );
    sensitive << ( tmp_reg_179 );
    sensitive << ( exitcond_fu_143_p2 );
    sensitive << ( exitcond1_fu_105_p2 );
    sensitive << ( ap_sig_90 );
    sensitive << ( ap_sig_ioackin_spk_id_out_V_V_TREADY );
    sensitive << ( ap_sig_124 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    ap_reg_ppiten_pp0_it0 = SC_LOGIC_0;
    ap_reg_ppiten_pp0_it1 = SC_LOGIC_0;
    ap_reg_ioackin_spk_id_out_V_V_TREADY = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "rt_feedback_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, fet_packet_spk_id_V_dout, "(port)fet_packet_spk_id_V_dout");
    sc_trace(mVcdFile, fet_packet_spk_id_V_empty_n, "(port)fet_packet_spk_id_V_empty_n");
    sc_trace(mVcdFile, fet_packet_spk_id_V_read, "(port)fet_packet_spk_id_V_read");
    sc_trace(mVcdFile, spk_id_out_V_V_TDATA, "(port)spk_id_out_V_V_TDATA");
    sc_trace(mVcdFile, spk_id_out_V_V_TVALID, "(port)spk_id_out_V_V_TVALID");
    sc_trace(mVcdFile, spk_id_out_V_V_TREADY, "(port)spk_id_out_V_V_TREADY");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_22, "ap_sig_22");
    sc_trace(mVcdFile, fet_packet_spk_id_V_blk_n, "fet_packet_spk_id_V_blk_n");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg1_fsm_2, "ap_sig_cseq_ST_pp0_stg1_fsm_2");
    sc_trace(mVcdFile, ap_sig_42, "ap_sig_42");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it0, "ap_reg_ppiten_pp0_it0");
    sc_trace(mVcdFile, exitcond1_reg_162, "exitcond1_reg_162");
    sc_trace(mVcdFile, tmp_1_reg_171, "tmp_1_reg_171");
    sc_trace(mVcdFile, ap_sig_cseq_ST_pp0_stg0_fsm_1, "ap_sig_cseq_ST_pp0_stg0_fsm_1");
    sc_trace(mVcdFile, ap_sig_60, "ap_sig_60");
    sc_trace(mVcdFile, ap_reg_ppiten_pp0_it1, "ap_reg_ppiten_pp0_it1");
    sc_trace(mVcdFile, tmp_2_reg_175, "tmp_2_reg_175");
    sc_trace(mVcdFile, spk_id_out_V_V_TDATA_blk_n, "spk_id_out_V_V_TDATA_blk_n");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st6_fsm_4, "ap_sig_cseq_ST_st6_fsm_4");
    sc_trace(mVcdFile, ap_sig_76, "ap_sig_76");
    sc_trace(mVcdFile, tmp_reg_179, "tmp_reg_179");
    sc_trace(mVcdFile, exitcond_fu_143_p2, "exitcond_fu_143_p2");
    sc_trace(mVcdFile, i_reg_78, "i_reg_78");
    sc_trace(mVcdFile, exitcond1_fu_105_p2, "exitcond1_fu_105_p2");
    sc_trace(mVcdFile, ap_sig_90, "ap_sig_90");
    sc_trace(mVcdFile, i_1_fu_111_p2, "i_1_fu_111_p2");
    sc_trace(mVcdFile, i_1_reg_166, "i_1_reg_166");
    sc_trace(mVcdFile, tmp_1_fu_117_p2, "tmp_1_fu_117_p2");
    sc_trace(mVcdFile, tmp_2_fu_123_p2, "tmp_2_fu_123_p2");
    sc_trace(mVcdFile, tmp_fu_137_p2, "tmp_fu_137_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st5_fsm_3, "ap_sig_cseq_ST_st5_fsm_3");
    sc_trace(mVcdFile, ap_sig_108, "ap_sig_108");
    sc_trace(mVcdFile, j_1_fu_149_p2, "j_1_fu_149_p2");
    sc_trace(mVcdFile, ap_sig_ioackin_spk_id_out_V_V_TREADY, "ap_sig_ioackin_spk_id_out_V_V_TREADY");
    sc_trace(mVcdFile, ap_sig_124, "ap_sig_124");
    sc_trace(mVcdFile, i_phi_fu_82_p4, "i_phi_fu_82_p4");
    sc_trace(mVcdFile, j_reg_89, "j_reg_89");
    sc_trace(mVcdFile, val_assign_fu_60, "val_assign_fu_60");
    sc_trace(mVcdFile, ap_reg_ioackin_spk_id_out_V_V_TREADY, "ap_reg_ioackin_spk_id_out_V_V_TREADY");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_sig_85, "ap_sig_85");
#endif

    }
    mHdltvinHandle.open("rt_feedback.hdltvin.dat");
    mHdltvoutHandle.open("rt_feedback.hdltvout.dat");
}

rt_feedback::~rt_feedback() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void rt_feedback::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ioackin_spk_id_out_V_V_TREADY = ap_const_logic_0;
    } else {
        if (ap_sig_85.read()) {
            if (!(!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_id_out_V_V_TREADY.read()))) {
                ap_reg_ioackin_spk_id_out_V_V_TREADY = ap_const_logic_0;
            } else if (esl_seteq<1,1,1>(ap_const_logic_1, spk_id_out_V_V_TREADY.read())) {
                ap_reg_ioackin_spk_id_out_V_V_TREADY = ap_const_logic_1;
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_90.read()) && 
             !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_105_p2.read()))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                    !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
            ap_reg_ppiten_pp0_it0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
             esl_seteq<1,1,1>(exitcond1_reg_162.read(), ap_const_lv1_0) && 
             !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_124.read()))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                     !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_124.read()) && 
                     !esl_seteq<1,1,1>(exitcond1_reg_162.read(), ap_const_lv1_0)))) {
            ap_reg_ppiten_pp0_it1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(exitcond1_reg_162.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_90.read()))) {
        i_reg_78 = i_1_reg_166.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_78 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_137_p2.read()))) {
        j_reg_89 = ap_const_lv18_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_4.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read()) && 
                !(!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_id_out_V_V_TREADY.read())))) {
        j_reg_89 = j_1_fu_149_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_175.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_90.read()))) {
        val_assign_fu_60 = fet_packet_spk_id_V_dout.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        val_assign_fu_60 = ap_const_lv32_FFFFFFFF;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_90.read()))) {
        exitcond1_reg_162 = exitcond1_fu_105_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_90.read()))) {
        i_1_reg_166 = i_1_fu_111_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_90.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_105_p2.read()))) {
        tmp_1_reg_171 = tmp_1_fu_117_p2.read();
        tmp_2_reg_175 = tmp_2_fu_123_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st5_fsm_3.read())) {
        tmp_reg_179 = tmp_fu_137_p2.read();
    }
}

void rt_feedback::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_4.read()) && 
         !(!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_id_out_V_V_TREADY.read())) && 
         (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void rt_feedback::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void rt_feedback::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_4.read()) && 
         !(!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_id_out_V_V_TREADY.read())) && 
         (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void rt_feedback::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void rt_feedback::thread_ap_sig_108() {
    ap_sig_108 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void rt_feedback::thread_ap_sig_124() {
    ap_sig_124 = (esl_seteq<1,1,1>(exitcond1_reg_162.read(), ap_const_lv1_0) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_171.read()) && esl_seteq<1,1,1>(fet_packet_spk_id_V_empty_n.read(), ap_const_logic_0));
}

void rt_feedback::thread_ap_sig_22() {
    ap_sig_22 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void rt_feedback::thread_ap_sig_42() {
    ap_sig_42 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void rt_feedback::thread_ap_sig_60() {
    ap_sig_60 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void rt_feedback::thread_ap_sig_76() {
    ap_sig_76 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(4, 4));
}

void rt_feedback::thread_ap_sig_85() {
    ap_sig_85 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_4.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read()));
}

void rt_feedback::thread_ap_sig_90() {
    ap_sig_90 = (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_175.read()) && esl_seteq<1,1,1>(fet_packet_spk_id_V_empty_n.read(), ap_const_logic_0));
}

void rt_feedback::thread_ap_sig_cseq_ST_pp0_stg0_fsm_1() {
    if (ap_sig_60.read()) {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg0_fsm_1 = ap_const_logic_0;
    }
}

void rt_feedback::thread_ap_sig_cseq_ST_pp0_stg1_fsm_2() {
    if (ap_sig_42.read()) {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_pp0_stg1_fsm_2 = ap_const_logic_0;
    }
}

void rt_feedback::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_22.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void rt_feedback::thread_ap_sig_cseq_ST_st5_fsm_3() {
    if (ap_sig_108.read()) {
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st5_fsm_3 = ap_const_logic_0;
    }
}

void rt_feedback::thread_ap_sig_cseq_ST_st6_fsm_4() {
    if (ap_sig_76.read()) {
        ap_sig_cseq_ST_st6_fsm_4 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st6_fsm_4 = ap_const_logic_0;
    }
}

void rt_feedback::thread_ap_sig_ioackin_spk_id_out_V_V_TREADY() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_spk_id_out_V_V_TREADY.read())) {
        ap_sig_ioackin_spk_id_out_V_V_TREADY = spk_id_out_V_V_TREADY.read();
    } else {
        ap_sig_ioackin_spk_id_out_V_V_TREADY = ap_const_logic_1;
    }
}

void rt_feedback::thread_exitcond1_fu_105_p2() {
    exitcond1_fu_105_p2 = (!i_phi_fu_82_p4.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(i_phi_fu_82_p4.read() == ap_const_lv3_7);
}

void rt_feedback::thread_exitcond_fu_143_p2() {
    exitcond_fu_143_p2 = (!j_reg_89.read().is_01() || !ap_const_lv18_3D090.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_89.read() == ap_const_lv18_3D090);
}

void rt_feedback::thread_fet_packet_spk_id_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_162.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_171.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_175.read())))) {
        fet_packet_spk_id_V_blk_n = fet_packet_spk_id_V_empty_n.read();
    } else {
        fet_packet_spk_id_V_blk_n = ap_const_logic_1;
    }
}

void rt_feedback::thread_fet_packet_spk_id_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg1_fsm_2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && 
          esl_seteq<1,1,1>(exitcond1_reg_162.read(), ap_const_lv1_0) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_reg_171.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_124.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_reg_175.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_90.read())))) {
        fet_packet_spk_id_V_read = ap_const_logic_1;
    } else {
        fet_packet_spk_id_V_read = ap_const_logic_0;
    }
}

void rt_feedback::thread_i_1_fu_111_p2() {
    i_1_fu_111_p2 = (!i_phi_fu_82_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_phi_fu_82_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void rt_feedback::thread_i_phi_fu_82_p4() {
    if ((esl_seteq<1,1,1>(exitcond1_reg_162.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_pp0_stg0_fsm_1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()))) {
        i_phi_fu_82_p4 = i_1_reg_166.read();
    } else {
        i_phi_fu_82_p4 = i_reg_78.read();
    }
}

void rt_feedback::thread_j_1_fu_149_p2() {
    j_1_fu_149_p2 = (!j_reg_89.read().is_01() || !ap_const_lv18_1.is_01())? sc_lv<18>(): (sc_biguint<18>(j_reg_89.read()) + sc_biguint<18>(ap_const_lv18_1));
}

void rt_feedback::thread_spk_id_out_V_V_TDATA() {
    spk_id_out_V_V_TDATA = ap_const_lv32_378;
}

void rt_feedback::thread_spk_id_out_V_V_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read()))) {
        spk_id_out_V_V_TDATA_blk_n = spk_id_out_V_V_TREADY.read();
    } else {
        spk_id_out_V_V_TDATA_blk_n = ap_const_logic_1;
    }
}

void rt_feedback::thread_spk_id_out_V_V_TVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st6_fsm_4.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_reg_ioackin_spk_id_out_V_V_TREADY.read()))) {
        spk_id_out_V_V_TVALID = ap_const_logic_1;
    } else {
        spk_id_out_V_V_TVALID = ap_const_logic_0;
    }
}

void rt_feedback::thread_tmp_1_fu_117_p2() {
    tmp_1_fu_117_p2 = (!i_phi_fu_82_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(i_phi_fu_82_p4.read() == ap_const_lv3_0);
}

void rt_feedback::thread_tmp_2_fu_123_p2() {
    tmp_2_fu_123_p2 = (!i_phi_fu_82_p4.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_phi_fu_82_p4.read() == ap_const_lv3_6);
}

void rt_feedback::thread_tmp_fu_137_p2() {
    tmp_fu_137_p2 = (!val_assign_fu_60.read().is_01() || !ap_const_lv32_378.is_01())? sc_lv<1>(): sc_lv<1>(val_assign_fu_60.read() == ap_const_lv32_378);
}

void rt_feedback::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_90.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_90.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_105_p2.read())))) {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it1.read()) && ap_sig_90.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_105_p2.read()))) {
                ap_NS_fsm = ap_ST_st5_fsm_3;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_reg_ppiten_pp0_it0.read()) && ap_sig_124.read())) {
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_2;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_st6_fsm_4;
            break;
        case 16 : 
            if ((!(!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_id_out_V_V_TREADY.read())) && (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) || 
  !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read())))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else if ((!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read()) && !(!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_reg_179.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_143_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, ap_sig_ioackin_spk_id_out_V_V_TREADY.read())))) {
                ap_NS_fsm = ap_ST_st6_fsm_4;
            } else {
                ap_NS_fsm = ap_ST_st6_fsm_4;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

void rt_feedback::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fet_packet_spk_id_V_dout\" :  \"" << fet_packet_spk_id_V_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"fet_packet_spk_id_V_empty_n\" :  \"" << fet_packet_spk_id_V_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"fet_packet_spk_id_V_read\" :  \"" << fet_packet_spk_id_V_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spk_id_out_V_V_TDATA\" :  \"" << spk_id_out_V_V_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"spk_id_out_V_V_TVALID\" :  \"" << spk_id_out_V_V_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"spk_id_out_V_V_TREADY\" :  \"" << spk_id_out_V_V_TREADY.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

